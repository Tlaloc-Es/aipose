[tool.poetry]
name = "aipose"
version = "0.1.1"
description = "Library to use pose estimation in your projects easily"
license = "MIT"
homepage = "https://github.com/Tlaloc-Es/aipose"
repository = "https://github.com/Tlaloc-Es/aipose"
keywords = ["pose-estimator", "yolo", "yolov7"]
authors = ["Tlaloc-Es <dev@tlaloc-es.com>"]
packages = [{include = "aipose"}]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "*"
matplotlib = ">=3.2.2"
opencv-python = ">=4.1.1"
torch = ">=1.7.0,!=1.12.0"
torchvision = ">=0.8.1,!=0.13.0"
numpy = "<1.24.0, >=1.18.5"
pandas = ">=1.1.4"
tqdm = ">=4.41.0"
seaborn = ">=0.11.0"
scipy = ">=1.4.1"
protobuf = "<4.21.3"
tensorboard = ">=2.4.1"
pyyaml = "^6.0"
click = "^8.1.3"

[tool.poetry.dev-dependencies]
pylint = "*"
pytest = "*"
black = "*"
mypy = "*"
ipykernel = "*"
ipython = "*"
pipenv-setup = "*"

[tool.poetry.scripts]
posewebcam = 'pose.__main__:webcam'

[tool.poe.tasks]
dev = "python -m src"
test = "python -m pytest -s -v test/"
build = "python setup.py bdist_wheel"
check_commit = "pre-commit run --all-files"
mypy = "mypy src --check-untyped-defs"
lint = "pylint --rcfile=.pylintrc src --max-complexity=10"
format = "black src test"
type_check = "mypy src"

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.18.1"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.1"
tag_format = "$version"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88

# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F", "W", "C90", "UP", "N", "PLC", "PLE", "PLR", "PLW"]
ignore = []

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

target-version = "py38"

[tool.ruff.mccabe]
max-complexity = 10

